{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\HNC\\\\Desktop\\\\YT-image-upload\\\\front-end\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport * as ImagePicker from 'expo-image-picker';\nexport default function ImagePickerExample() {\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      title = _useState2[0],\n      setTitle = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      cover = _useState4[0],\n      setCever = _useState4[1];\n\n  var newBook = function newBook() {\n    var uploadData = new FormData();\n    uploadData.append('title', title);\n    uploadData.append('cover', cover);\n    console.log('cover', cover);\n    fetch('http://127.0.0.1:8000/books/', {\n      method: 'POST',\n      body: uploadData\n    }).then(function (res) {\n      return console.log('res:', res);\n    }).catch(function (error) {\n      return console.log(error);\n    });\n  };\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      image = _useState6[0],\n      setImage = _useState6[1];\n\n  useEffect(function () {\n    (function _callee() {\n      var _await$ImagePicker$re, status;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(Platform.OS !== 'web')) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.requestMediaLibraryPermissionsAsync());\n\n            case 3:\n              _await$ImagePicker$re = _context.sent;\n              status = _await$ImagePicker$re.status;\n\n              if (status !== 'granted') {\n                alert('Sorry, we need camera roll permissions to make this work!');\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    })();\n  }, []);\n\n  var pickImage = function pickImage() {\n    var result, localUri, filename;\n    return _regeneratorRuntime.async(function pickImage$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n              mediaTypes: ImagePicker.MediaTypeOptions.All,\n              allowsEditing: true,\n              aspect: [4, 3],\n              quality: 1,\n              base64: true\n            }));\n\n          case 2:\n            result = _context2.sent;\n\n            if (!result.cancelled) {\n              console.log('result:', result);\n              localUri = result.uri;\n              filename = localUri.split('/').pop();\n              console.log('filename:', filename);\n              setImage(result.uri);\n              setTitle('xxxx');\n              setCever(result);\n              newBook();\n            }\n\n            console.log('helllo:', result);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(Button, {\n    title: \"Pick an image from camera roll\",\n    onPress: pickImage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }), image && React.createElement(Image, {\n    source: {\n      uri: image\n    },\n    style: {\n      width: 200,\n      height: 200\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/HNC/Desktop/YT-image-upload/front-end/App.js"],"names":["React","useState","useEffect","ImagePicker","ImagePickerExample","title","setTitle","cover","setCever","newBook","uploadData","FormData","append","console","log","fetch","method","body","then","res","catch","error","image","setImage","Platform","OS","requestMediaLibraryPermissionsAsync","status","alert","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","base64","result","cancelled","localUri","uri","filename","split","pop","flex","alignItems","justifyContent","width","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Image, View, Platform, TextInput  } from 'react-native';\nimport * as ImagePicker from 'expo-image-picker';\n\nexport default function ImagePickerExample() {\n//////////////////////////////////\n    const [ title, setTitle ] = useState(\"\");\n    const [ cover, setCever ] = useState();\n    //const [text, onChangeText] = React.useState(\"Useless Text\");\n\n    const newBook = () => {\n        const uploadData = new FormData();\n        uploadData.append('title', title);\n        uploadData.append('cover', cover);\n        console.log('cover', cover);\n        fetch('http://127.0.0.1:8000/books/', {\n        method: 'POST',\n        body: uploadData\n        })\n        .then( res => console.log('res:', res))\n        .catch(error => console.log(error))\n        \n    }\n//////////////////////////////////////\n    const [image, setImage] = useState(null);\n\n    useEffect(() => {\n        (async () => {\n        if (Platform.OS !== 'web') {\n            const { status } = await ImagePicker.requestMediaLibraryPermissionsAsync();\n            if (status !== 'granted') {\n            alert('Sorry, we need camera roll permissions to make this work!');\n            }\n        }\n        })();\n    }, []);\n\n    const pickImage = async () => {\n        const result = await ImagePicker.launchImageLibraryAsync({\n        mediaTypes: ImagePicker.MediaTypeOptions.All,\n        allowsEditing: true,\n        aspect: [4, 3],\n        quality: 1,\n        base64: true,\n        });\n\n        \n        if (!result.cancelled) {\n            console.log('result:', result);\n            let localUri = result.uri;\n            let filename = localUri.split('/').pop();\n            console.log('filename:', filename);\n            setImage(result.uri);\n            setTitle('xxxx');\n            setCever(result);\n            \n            newBook();\n        }\n        console.log('helllo:', result);\n\n    };\n  return (\n    <View style={{ flex: 1, alignItems: 'center', justifyContent: 'center' }}>\n        {/* <TextInput\n        onChangeText={(evt) => setTitle(evt.target.value)}\n        value={title}\n        /> */}\n      <Button title=\"Pick an image from camera roll\" onPress={pickImage} />\n      {image && <Image source={{ uri: image }} style={{ width: 200, height: 200 }} />}\n    </View>\n  );\n}\n\n// const styles = StyleSheet.create({\n//     input: {\n//       height: 40,\n//       margin: 12,\n//       borderWidth: 1,\n//     },\n//   });"]},"metadata":{},"sourceType":"module"}